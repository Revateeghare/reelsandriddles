<link rel="shortcut icon" href="../images/logo.png" type="image/x-icon">
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title> Reel & Riddles</title>
<style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background:url(../images/ques1tion.webp);
        }

    .header {
        background-color: #333;
        color: #fff;
        padding: 10px 0;
        text-align: center;
        position: relative;
    }

    .exit-btn {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        right: 10px;
        background-color: white;
        border: none;
        color: black;
        font-size: 16px;
        cursor: pointer;
        height: 40px;
        width: 70px;
        border-radius: 5px;
    }

    .board {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 5px;
        width: 300px;
        margin: 20px auto;
        margin-top: 100px;
    }

    .cell {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100px;
        height: 100px;
        background-color: lightblue;
        font-size: 3rem;
        cursor: pointer;
    }

    .cell:hover {
        background-color: #a0e0ff;
    }
</style>
</head>
<body>

<div class="header">
    <h1>Tic Tac Toe</h1>
    <button class="exit-btn" onclick="exitGame()">Exit</button>
</div>

<div class="board" id="board">
    <div class="cell" data-index="0"></div>
    <div class="cell" data-index="1"></div>
    <div class="cell" data-index="2"></div>
    <div class="cell" data-index="3"></div>
    <div class="cell" data-index="4"></div>
    <div class="cell" data-index="5"></div>
    <div class="cell" data-index="6"></div>
    <div class="cell" data-index="7"></div>
    <div class="cell" data-index="8"></div>
</div>

<script>
    const board = document.getElementById('board');
    const cells = document.querySelectorAll('.cell');
    let currentPlayer = 'X';
    let gameActive = true;

    const winningCombinations = [
        [0, 1, 2],
        [3, 4, 5],
        [6, 7, 8],
        [0, 3, 6],
        [1, 4, 7],
        [2, 5, 8],
        [0, 4, 8],
        [2, 4, 6]
    ];

    function checkWinner() {
        for (let combo of winningCombinations) {
            const [a, b, c] = combo;
            if (cells[a].innerText && cells[a].innerText === cells[b].innerText && cells[a].innerText === cells[c].innerText) {
                gameActive = false;
                return cells[a].innerText;
            }
        }
        return null;
    }

    function checkDraw() {
        return [...cells].every(cell => cell.innerText !== '');
    }

    function handleCellClick(event) {
        const cell = event.target;
        const index = cell.getAttribute('data-index');

        if (!gameActive || cells[index].innerText !== '') return;

        cells[index].innerText = currentPlayer;

        const winner = checkWinner();
        if (winner) {
            alert(`Player ${winner} wins!`);
            gameActive = false;
            return;
        }

        if (checkDraw()) {
            alert("It's a draw!");
            gameActive = false;
            return;
        }

        currentPlayer = currentPlayer === 'X' ? 'O' : 'X';

        // Computer's turn
        if (currentPlayer === 'O' && gameActive) {
            setTimeout(computerTurn, 500);
        }
    }

    function computerTurn() {
        const emptyCells = [...cells].filter(cell => cell.innerText === '');
        const randomIndex = Math.floor(Math.random() * emptyCells.length);
        emptyCells[randomIndex].innerText = currentPlayer;

        const winner = checkWinner();
        if (winner) {
            alert(`Player ${winner} wins!`);
            gameActive = false;
            return;
        }

        if (checkDraw()) {
            alert("It's a draw!");
            gameActive = false;
            return;
        }

        currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
    }

    cells.forEach(cell => {
        cell.addEventListener('click', handleCellClick);
    });

    function exitGame() {
        if (confirm("Are you sure you want to exit?")) {
            window.close();
        }
    }
</script>

</body>
</html>

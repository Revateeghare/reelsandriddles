<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Reel & Riddles</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      text-align: center;
      background-color: red;
      margin: 0;
      padding: 0;
    }

    h1 {
      color: #00796b;
    }

    #game-container {
      width: 850px;
      height: 500px;
      margin: 20px auto;
      background-color: #fff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
      margin-top: 50px;
    }

    #game-container:hover {
      transform: scale(1.05);
      box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
    }

    #game-image {
      max-width: 100%;
      height: auto;
      max-height: 500px;
      width: 750px;
      border-radius: 8px;
      margin-bottom: 20px;
      transition: transform 0.3s ease-in-out;
      margin-top: 20px;
    }

    #game-image:hover {
      transform: scale(1.1);
    }

    .option-button {
      padding: 12px 24px;
      font-size: 16px;
      background-color: #00796b;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      margin: 5px;
      transition: background-color 0.3s ease-in-out;
    }

    .option-button:hover {
      background-color: #004d40;
    }

    #result {
      font-size: 18px;
      margin-top: 20px;
      color: #eef2f2;
      transition: color 0.3s ease-in-out;
    }

    #result:hover {
      color: #004d40;
      cursor: pointer;
    }

    /* Modal Styles */
    .modal {
      display: none;
      position: fixed;
      z-index: 1;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0,0,0,0.5);
    }

    .modal-content {
      background-color: #fefefe;
      margin: 15% auto;
      padding: 20px;
      border: none;
      max-width: 400px; /* Adjust the maximum width here */
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.2);
      max-height: 400px;
    }

    .close {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
      cursor: pointer; /* Add cursor pointer */
    }

    .close:hover,
    .close:focus {
      color: black;
      text-decoration: none;
    }

    .modal-message {
      font-size: 18px;
      margin-bottom: 20px;
      color: #333;
    }

    .modal-button {
      padding: 10px 20px;
      font-size: 16px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      transition: background-color 0.3s ease-in-out;
      margin-right: 10px;
    }

    .modal-restart {
      background-color: #00796b;
      color: white;
    }

    .modal-next-level {
      background-color: #32a852;
      color: white;
    }

    .modal-exit {
      background-color: #ff5733;
      color: white;
    }

    .modal-button:hover {
      filter: brightness(0.9);
    }

    header {
      background-color: #d8202072;
      color: #fff;
      text-align: center;
      padding: 2rem;
      height: 10px;
      font-size: 20px;
    }

    h1{
      margin-top:28px;
      color: #fff;
    }

    #logout-btn {
      position: absolute;
      top: 30px;
      right: 10px;
      background-color:yellow;
      color: black;
      padding: 10px 15px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-weight: 600;
      height: 50px;
      width: 80px;
    }

    #logout-btn:hover {
      background-color: #c0392b;
    }

    #timer {
      font-size: 24px;
      margin-bottom: 20px;
    }
  </style>
</head>
<body>
  
  <header>
    <h1>Reels And Riddles</h1>
    <button id="logout-btn" onclick="alert('Logout clicked')">Logout</button>
  </header>

  <div id="game-container">
    <img id="game-image" src="./images/kdrama (1).jpeg" alt="Game Image">
    <br>
    <button class="option-button" onclick="checkAnswer(0)"></button>
    <button class="option-button" onclick="checkAnswer(1)"></button>
    <button class="option-button" onclick="checkAnswer(2)"></button>
    <button class="option-button" onclick="checkAnswer(3)"></button>
    <br>
    <p id="result"></p>
    <div id="timer"></div>
  </div>

  <!-- Game Over Modal -->
  <div id="gameOverModal" class="modal">
    <div class="modal-content">
      <span class="close" onclick="closeModal('gameOverModal')">&times;</span>
      <p id="gameOverMessage" class="modal-message"></p>
      <button class="modal-button modal-restart" onclick="restartGame()">Restart Game</button>
      <button class="modal-button modal-exit" onclick="exitGame()">Exit</button>
    </div>
  </div>

  <!-- Game Won Modal -->
  <div id="gameWonModal" class="modal">
    <div class="modal-content">
      <span class="close" onclick="closeModal('gameWonModal')">&times;</span>
      <p id="gameWonMessage" class="modal-message"></p>
      <button class="modal-button modal-restart" onclick="restartGame()">Restart Game</button>
      <button class="modal-button modal-next-level" onclick="nextLevel()">Next Level</button>
      <button class="modal-button modal-exit" onclick="exitGame()">Exit</button>
    </div>
  </div>

  <script>
    const images = [
      {url: "about.jpg", options: ["Option A", "Option B", "Option C", "Option D"], answer: 0},
      {url: "ben10.jpeg", options: ["Option A", "Option B", "Option C", "Option D"], answer: 2},
      {url: "bp.jpeg", options: ["Option A", "Option B", "Option C", "Option D"], answer: 1}
      // Add more image URLs, options, and answers as needed
    ];

    let currentImageIndex = 0;
    let correctAnswers = 0;
    let timer;

    function initializeGame() {
      const gameImage = document.getElementById("game-image");
      const optionButtons = document.querySelectorAll(".option-button");
      const timerDisplay = document.getElementById("timer");

      // Select a random image
      currentImageIndex = Math.floor(Math.random() * images.length);
      
      gameImage.src = "images/" + images[currentImageIndex].url;

      // Populate option buttons
      optionButtons.forEach((button, index) => {
        button.textContent = images[currentImageIndex].options[index];
      });

      document.getElementById("result").innerHTML = "";

      // Start the timer (adjust the time limit as needed, currently set to 10 seconds)
      let timeLeft = 10;
      timerDisplay.textContent = `Time Left: ${timeLeft} seconds`;

      timer = setInterval(() => {
        timeLeft--;
        timerDisplay.textContent = `Time Left: ${timeLeft} seconds`;

        if (timeLeft === 0) {
          clearInterval(timer);
          showGameOverModal("Time's up! Click here to restart.");
        }
      }, 1000);
    }

    function checkAnswer(selectedOptionIndex) {
      clearInterval(timer); // Clear the timer

      const correctAnswerIndex = images[currentImageIndex].answer;

      if (selectedOptionIndex === correctAnswerIndex) {
        document.getElementById("result").innerHTML = "Correct!";
        correctAnswers++;
      } else {
        showGameOverModal("Game Over. Click here to restart.");
        currentImageIndex = 0; // Reset to the first image
        correctAnswers = 0; // Reset correct answers count
        return; // Do not proceed to the next question if the answer is incorrect
      }

      // Move to the next question
      currentImageIndex++;
      if (currentImageIndex < images.length) {
        initializeGame();
      } else {
        if (correctAnswers === images.length) {
          showGameWonModal("Congratulations! You've won the game.");
        } else {
          showGameOverModal("Game Over. You have completed all questions.");
        }
      }
    }

    function showGameOverModal(message) {
      const modal = document.getElementById("gameOverModal");
      modal.style.display = "block";
      document.getElementById("gameOverMessage").innerHTML = message;
    }

    function showGameWonModal(message) {
      const modal = document.getElementById("gameWonModal");
      modal.style.display = "block";
      document.getElementById("gameWonMessage").innerHTML = message;
    }

    function closeModal(modalId) {
      const modal = document.getElementById(modalId);
      modal.style.display = "none";
    }

    function restartGame() {
      closeModal("gameOverModal");
      closeModal("gameWonModal");
      correctAnswers = 0;
      initializeGame();
    }

    function exitGame() {
      window.location.href = "./mlevel"; // Redirect to the "./mlevel" page
    }

    function nextLevel() {
      window.location.href = "./mlevel2"; // Redirect to the "./mlevel2" page
    }

    // Load the first image when the page loads
    window.onload = initializeGame;
  </script>

</body>
</html>
